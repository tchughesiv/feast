apiVersion: apps/v1
kind: Deployment
metadata:
  name: client
spec:
  replicas: 1
  selector:
    matchLabels:
      app: client
  template:
    metadata:
      labels:
        app: client
    spec:
      initContainers:
        - name: init-registry
          command:
            - sh
            - '-c'
            - 'until grpcurl -plaintext -d '''' -format text feast-example-registry.feast.svc.cluster.local:80 grpc.health.v1.Health/Check; do echo waiting for registry; sleep 2; done'
          image: 'fullstorydev/grpcurl:v1.9.1-alpine'
        - name: feast-apply
          image: 'quay.io/tchughesiv/feature-server:0.41.0-dev'
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "Starting feast initialization job...";

              cd /feast-init;
              echo 'from feast.repo_operations import init_repo
              from unittest import mock
              from feast.templates.postgres.bootstrap import bootstrap

              project_directory = "sample"
              template = "postgres"

              with mock.patch("click.prompt", side_effect=["postgres.feast.svc.cluster.local", "5432", "feast", "public", "feast", "feast"]):
                with mock.patch("click.confirm", side_effect=[True]):
                  init_repo(project_directory, template)' > postgres-apply.py

              cat postgres-apply.py
              python postgres-apply.py
              cd /feast-init/sample/feature_repo;
              cp -f /feast-client/feature_store.yaml .;
              echo "";
              cat feature_store.yaml
              sed -i 's|store.materialize_incremental(end_date=datetime.now())||' test_workflow.py

              echo "";
              echo "Executing feast apply...";
              feast apply;
              echo "Feast initialization completed successfully.";
          volumeMounts:
            - name: client-feature-store-config
              mountPath: /feast-client
              readOnly: true
            - name: registry-tls
              readOnly: true
              mountPath: /tls/registry/
            - name: shared-data
              mountPath: /feast-init
      containers:
        - name: client
          image: 'quay.io/tchughesiv/feature-server:0.41.0-dev'
          imagePullPolicy: Always
          command: ["sleep", "infinity"]
          volumeMounts:
            - name: client-feature-store-config
              mountPath: /feast-client
              readOnly: true
            - name: registry-tls
              readOnly: true
              mountPath: /tls/registry/
            - name: shared-data
              mountPath: /feast-init
      volumes:
        - name: client-feature-store-config
          configMap:
            name: feast-example-client
        - name: online-tls
          secret:
            secretName: feast-example-registry-tls
        - name: registry-tls
          secret:
            secretName: feast-example-registry-tls
        - name: shared-data
          emptyDir: {}
